<template>\n  <div class="layout-padding">\n    <div class="layout-padding-auto layout-padding-view">\n#if($queryList)\n      <el-row v-show="showSearch">\n        <el-form :model="state.queryForm" ref="queryRef" :inline="true" @keyup.enter="getDataList">\n#foreach($field in $queryList)\n#if($field.queryFormType == 'select')\n      <el-form-item label="#if(${field.fieldComment})${field.fieldComment}#else ${field.attrName}#end" prop="${field.attrName}">\n            <el-select v-model="state.queryForm.${field.attrName}" placeholder="请选择#if(${field.fieldComment})${field.fieldComment}#else ${field.attrName}#end">\n       #if($field.fieldDict)\n              <el-option :label="item.label" :value="item.value" v-for="(item, index) in ${field.fieldDict}" :key="index"></el-option>\n         #else\n              <el-option label="请选择">0</el-option>\n         #end\n            </el-select>\n      </el-form-item>\n#elseif($field.queryFormType == 'date')\n      <el-form-item label="#if(${field.fieldComment})${field.fieldComment}#else ${field.attrName}#end" prop="${field.attrName}">\n      <el-date-picker type="date" placeholder="请输入#if(${field.fieldComment})${field.fieldComment}#else ${field.attrName}#end" v-model="state.queryForm.${field.attrName}"></el-date-picker>\n      </el-form-item>\n#elseif($field.queryFormType == 'datetime')\n      <el-form-item label="#if(${field.fieldComment})${field.fieldComment}#else ${field.attrName}#end" prop="${field.attrName}" >\n            <el-date-picker type="datetime" placeholder="请输入#if(${field.fieldComment})${field.fieldComment}#else ${field.attrName}#end" v-model="state.queryForm.${field.attrName}"></el-date-picker>\n      </el-form-item>\n#elseif($field.formType == 'radio')\n      <el-form-item label="#if(${field.fieldComment})${field.fieldComment}#else ${field.attrName}#end" prop="${field.attrName}">\n            <el-radio-group v-model="state.queryForm.${field.attrName}">\n      #if($field.fieldDict)\n             <el-radio :label="item.value" v-for="(item, index) in ${field.fieldDict}" border :key="index">{{ item.label }}\n            </el-radio>\n       #else\n           <el-radio label="${field.fieldComment}" border>${field.fieldComment}</el-radio>\n       #end\n            </el-radio-group>\n     </el-form-item>\n#else\n      <el-form-item label="#if(${field.fieldComment})${field.fieldComment}#else ${field.attrName}#end" prop="${field.attrName}" >\n        <el-input placeholder="请输入#if(${field.fieldComment})${field.fieldComment}#else ${field.attrName}#end" v-model="state.queryForm.${field.attrName}"\n          style="max-width: 180px" />\n      </el-form-item>\n#end\n#end\n          <el-form-item>\n            <el-button icon="search" type="primary" @click="getDataList">\n              查询\n            </el-button>\n            <el-button icon="Refresh" @click="resetQuery">重置</el-button>\n          </el-form-item>\n        </el-form>\n      </el-row>\n#end\n      <el-row>\n        <div class="mb8" style="width: 100%">\n          <el-button icon="folder-add" type="primary" class="ml10" @click="formDialogRef.openDialog()"\n            v-auth="'${moduleName}_${functionName}_add'">\n            新 增\n          </el-button>\n          <el-button plain :disabled="multiple" icon="Delete" type="primary"\n            v-auth="'${moduleName}_${functionName}_del'" @click="handleDelete(selectObjs)">\n            删除\n          </el-button>\n          <right-toolbar v-model:showSearch="showSearch" :export="'${moduleName}_${functionName}_export'"\n                @exportExcel="exportExcel" class="ml10 mr20" style="float: right;"\n            @queryTable="getDataList"></right-toolbar>\n        </div>\n      </el-row>\n      <el-table :data="state.dataList" v-loading="state.loading" border \n        :cell-style="tableStyle.cellStyle" :header-cell-style="tableStyle.headerCellStyle"\n        @selection-change="selectionChangeHandle" @sort-change="sortChangeHandle">\n        <el-table-column type="selection" width="40" align="center" />\n        <el-table-column type="index" label="#" width="40" />\n      #foreach($field in $gridList)\n        #if($field.fieldDict)\n          <el-table-column prop="${field.attrName}" label="#if(${field.fieldComment})${field.fieldComment}#else ${field.attrName}#end" show-overflow-tooltip>\n      <template #default="scope">\n                <dict-tag :options="$field.fieldDict" :value="scope.row.${field.attrName}"></dict-tag>\n            </template>\n          </el-table-column>\n        #else\n          <el-table-column prop="${field.attrName}" label="#if(${field.fieldComment})${field.fieldComment}#else ${field.attrName}#end" #if(${field.gridSort} == '1')sortable="custom"#end show-overflow-tooltip/>\n        #end\n     #end\n        <el-table-column label="操作" width="200">\n          <template #default="scope">\n          #if($ChildClassName)\n            <el-button text type="primary" icon="view" v-auth="'sys_role_edit'" @click="formDialogRef.openDialog(scope.row.${pk.attrName}, true)">\n              详情\n            </el-button>\n          #end\n            <el-button icon="edit-pen" text type="primary" v-auth="'${moduleName}_${functionName}_edit'"\n              @click="formDialogRef.openDialog(scope.row.${pk.attrName})">编辑</el-button>\n            <el-button icon="delete" text type="primary" v-auth="'${moduleName}_${functionName}_del'" @click="handleDelete([scope.row.${pk.attrName}])">\n              删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <pagination @size-change="sizeChangeHandle" @current-change="currentChangeHandle" v-bind="state.pagination" />\n    </div>\n\n    <!-- 编辑、新增  -->\n    <form-dialog ref="formDialogRef" @refresh="getDataList(false)" />\n  </div>\n</template>\n\n<script setup lang="ts" name="system${ClassName}">\nimport { BasicTableProps, useTable } from "/@/hooks/table";\nimport { fetchList, delObjs } from "/@/api/${moduleName}/${functionName}";\nimport { useMessage, useMessageBox } from "/@/hooks/message";\nimport { useDict } from '/@/hooks/dict';\n// 引入组件\nconst FormDialog = defineAsyncComponent(() => import('./form.vue'));\n\n// 定义查询字典\n#set($fieldDict=[])\n#foreach($field in $queryList)\n  #if($field.fieldDict)\n    #set($void=$fieldDict.add($field.fieldDict))\n  #end\n#end\n\n#foreach($field in $gridList)\n  #if($field.fieldDict)\n    #set($void=$fieldDict.add($field.fieldDict))\n  #end\n#end\n#if($fieldDict)\nconst { $dict.format($fieldDict) } = useDict($dict.quotation($fieldDict))\n#end\n// 定义变量内容\nconst formDialogRef = ref()\n// 搜索变量\nconst queryRef = ref()\nconst showSearch = ref(true)\n// 多选变量\nconst selectObjs = ref([]) as any\nconst multiple = ref(true)\n\nconst state: BasicTableProps = reactive<BasicTableProps>({\n  queryForm: {},\n  pageList: fetchList\n})\n\n//  table hook\nconst {\n  getDataList,\n  currentChangeHandle,\n  sizeChangeHandle,\n  sortChangeHandle,\n  downBlobFile,\n  tableStyle\n} = useTable(state)\n\n// 清空搜索条件\nconst resetQuery = () => {\n  // 清空搜索条件\n  queryRef.value?.resetFields()\n  // 清空多选\n  selectObjs.value = []\n  getDataList()\n}\n\n// 导出excel\nconst exportExcel = () => {\n  downBlobFile('/${moduleName}/${functionName}/export', Object.assign(state.queryForm, { ids: selectObjs }), '${functionName}.xlsx')\n}\n\n// 多选事件\nconst selectionChangeHandle = (objs: { $pk.attrName: string }[]) => {\n  selectObjs.value = objs.map(({ $pk.attrName }) => $pk.attrName);\n  multiple.value = !objs.length;\n};\n\n// 删除操作\nconst handleDelete = async (ids: string[]) => {\n  try {\n    await useMessageBox().confirm('此操作将永久删除');\n  } catch {\n    return;\n  }\n\n  try {\n    await delObjs(ids);\n    getDataList();\n    useMessage().success('删除成功');\n  } catch (err: any) {\n    useMessage().error(err.msg);\n  }\n};\n</script>
